}
load(paste(File_path,"/Method_4group/scGeneNet/Output_Obj/scGeneNet_result_4group_1022.Rdata",sep = ""))
scGeneNet_pre_res<-list()
for(g in 1:4){
# target_pre<-result_all_list$Theta_mat_array_hat_all[,,g,which.min(result_all_list$BIC_mat_shrink[g,])]
scale_mat<-result_all_list$Theta_mat_array_hat_all[,,g,which.min(result_all_list$BIC_mat_shrink[g,])]
weight_densy_temp<- (scale_mat)/(matrix(sqrt(diag((scale_mat))),ncol = 1) %*% matrix(sqrt(diag((scale_mat))),nrow = 1))
diag(weight_densy_temp)<-0
scGeneNet_pre_res[[g]]<-weight_densy_temp[index_gene,index_gene]
}
# 假设有三个矩阵，每个矩阵行和列都是基因
EMPLN_2_group_mat <- EMPLN_2_pre_res[[group_i]]
EMPLN_2_group_mat<-abs(EMPLN_2_group_mat)
PLNet_group_mat <- PLNet_pre_res[[group_i]]
PLNet_group_mat<-abs(PLNet_group_mat)
scGeneNet_group_mat <- scGeneNet_pre_res[[group_i]]
scGeneNet_group_mat<-abs(scGeneNet_group_mat)
rownames(EMPLN_2_group_mat) <- top_gene_name
colnames(EMPLN_2_group_mat) <- top_gene_name
##Density-specific GRN selection for each method
rm(list = ls())
#1. Set up the overall file path
##--------------------------------------------------------------------------------------------
##--------------------------------------------------------------------------------------------
data_source<-"Zheng"
dim_data<-300
#2. Set up the overall file path
File_path0<-paste("/Users/fei/Documents/R_project/EM-MMLE/analysis/p",dim_data,sep="")
File_path<-paste(File_path0,"/Benchmarking on scRNA-seq data/",data_source,"'s file",sep = "")
load(file = paste(File_path,"/Evaluation/Obj_use/weight_mat_EMPLN_2_densy_4group_005.Rdata",sep = ""))
load(file = paste(File_path,"/Evaluation/Obj_use/gold_standard_network.Rdata",sep = ""))
load(paste(File_path,"/Data/gene_GRN_intop300HVG_4group.Rdata",sep = ""))
EMPLN_2_group_array<-array(NA,dim=c(4,length(gene_GRN),length(gene_GRN)))
for(gg in 1:4){
print(gg)
rowname_vec<-gene_GRN
weight_densy_temp<-weight_mat_EMPLN_2_densy[gg,,]
diag(weight_densy_temp)<-0
EMPLN_2_group_mat<-abs(weight_densy_temp)
rownames(EMPLN_2_group_mat) <- rowname_vec
colnames(EMPLN_2_group_mat) <- rowname_vec
EMPLN_2_group_array[gg,,]<-EMPLN_2_group_mat
}
no_regulation_genes <- gene_GRN[
apply(EMPLN_2_group_array[1,,] == 0, 2, all) &
apply(EMPLN_2_group_array[2,,] == 0, 2, all) &
apply(EMPLN_2_group_array[3,,] == 0, 2, all) &
apply(EMPLN_2_group_array[4,,] == 0, 2, all)
]
g<-1
rowname_vec<-gene_GRN
weight_densy_temp<-weight_mat_EMPLN_2_densy[g,,]
diag(weight_densy_temp)<-0
EMPLN_2_group_mat<-abs(weight_densy_temp)
rownames(EMPLN_2_group_mat) <- rowname_vec
colnames(EMPLN_2_group_mat) <- rowname_vec
rownames(gold_standard_network) <- rowname_vec
colnames(gold_standard_network) <- rowname_vec
result_matrix <- ifelse(EMPLN_2_group_mat != 0 & gold_standard_network != 0, 1, 0)
non_zero_positions <- which(result_matrix != 0, arr.ind = TRUE)
print("不为0的位置:")
print(non_zero_positions)
for (variable in 1:dim(non_zero_positions)[1]) {
print(paste("i ",gene_GRN[non_zero_positions[variable,1]],"j ", gene_GRN[non_zero_positions[variable,2]]))
}
library(igraph)
library(Seurat)
library(SeuratData)
load(paste(File_path,"/Method_4group/EMPLN2/Output_Obj/result_all_list_iter3_omega0.8_diagonal_ifFALSE_cut50_4group.Rdata",sep = ""))
load(paste(File_path,"/Method_4group/EMPLN/Output_Obj/EMPLN_init_4group.Rdata",sep = ""))
load(paste(File_path,"/Data/cluster_true_4group.Rdata",sep = ""))
TF_name<-gene_GRN[1:8]
rowname_vec<-rownames(EMPLN_init$sigma_mat_list[[1]])
row_index<-which(rowname_vec %in% TF_name)
EMPLN_2_pre_res<-list()
rowname_vec<-gene_GRN
scale_mat<-weight_mat_EMPLN_2_densy[g,,]
weight_densy_temp<- (scale_mat)/(matrix(sqrt(diag((scale_mat))),ncol = 1) %*% matrix(sqrt(diag((scale_mat))),nrow = 1))
diag(weight_densy_temp)<-0
EMPLN_2_group_mat<-abs(weight_densy_temp)
rownames(EMPLN_2_group_mat) <- rowname_vec
colnames(EMPLN_2_group_mat) <- rowname_vec
# no_regulation_genes <- rowname_vec[
#   apply(EMPLN_2_group_mat[2:8,] == 0, 2, all)    # 检查matrix3每列是否全为0
# ]
group_gene_name<-setdiff(rowname_vec,no_regulation_genes)
group_gene_name<-setdiff(group_gene_name,gene_GRN[2:8])
group_gene_name<-c(gene_GRN[2:8],group_gene_name)
input_plot_mat1<-EMPLN_2_group_mat[group_gene_name,group_gene_name]
input_plot_mat1<-t(input_plot_mat1)+input_plot_mat1
gene_network1 <- graph_from_adjacency_matrix(input_plot_mat1, mode = "undirected", diag = FALSE, weighted = TRUE)
# 设置节点标签（假设 group_gene_name 是基因名称的向量）
V(gene_network1)$label <- group_gene_name
# 设置节点颜色
V(gene_network1)$color <- adjustcolor("#A2D2DF", alpha.f = 0.8)
V(gene_network1)$frame.color <- "#7AB2D3"
# 设置边框宽度
V(gene_network1)$frame.width <- 2
# 将相关性值映射到边的宽度上
E(gene_network1)$width <- E(gene_network1)$weight * 10
# 设置边的颜色
E(gene_network1)$color <- "gray"
set.seed(12)
layout_coords <- layout_with_fr(gene_network1)
# layout_coords <- layout_with_kk(gene_network1)
layout_coords <- layout_coords   # 放大布局坐标，增加节点之间的距离
label_distance <- -0.5 # 调整节点标签与节点之间的距离
label_degree<-(pi)/2
label_cex<-0.7
node_size<-12
plot(gene_network1, layout = layout_coords,
vertex.size = node_size,
vertex.label.dist = label_distance,  # 调整标签与节点的距离
vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
vertex.label.cex = label_cex,  # 调整基因名的字体大小
main = "EMPLN2")
celltype_order<-colnames(table(EMPLN_init$celltypes_label,cluster_true))[apply(table(EMPLN_init$celltypes_label,cluster_true),MARGIN = 1,which.max)]
# 计算加权节点度
weighted_degrees <- strength(gene_network1, weights = E(gene_network1)$weight)
# 将加权节点度映射到节点大小
node_size <- weighted_degrees / max(weighted_degrees) * 10  # 归一化并放大
# 重新绘制网络图
plot(gene_network1, layout = layout_coords,
vertex.size = node_size,  # 节点大小
vertex.label.dist = label_distance,  # 调整标签与节点的距离
vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
vertex.label.cex = label_cex,  # 调整基因名的字体大小
main = celltype_order[g])
weighted_degrees <- strength(gene_network1, weights = E(gene_network1)$weight)
# 将加权节点度映射到节点大小
node_size <- weighted_degrees / max(weighted_degrees) * 10  # 归一化并放大
# 获取节点的度数，度数为0的节点表示没有连边
node_degrees <- degree(gene_network1)
vertex_labels <- ifelse(node_degrees > 0, V(gene_network1)$name, NA)
# 生成一个标签向量，度数为0的节点没有标签
# vertex_labels <- ifelse((V(gene_network1)$name %in% gene_GRN[2:8]), V(gene_network1)$name, NA)
# 重新绘制网络图并保存为PDF文件
pdf(paste("/Users/fei/Documents/R_project/EM-MMLE/analysis/p300/Benchmarking on scRNA-seq data/Zheng's file/Evaluation/picture_heatmap/natwork_Zheng", celltype_order[g], ".pdf", sep = ""), width = 8, height = 8)  # 设置保存路径和图像大小
plot(gene_network1, layout = layout_coords,
vertex.size = node_size,  # 节点大小
vertex.label = vertex_labels,  # 只有有连边的节点显示标签
vertex.label.dist = label_distance,  # 调整标签与节点的距离
vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
vertex.label.cex = label_cex,  # 调整基因名的字体大小
main = celltype_order[g])
g<-1
rowname_vec<-gene_GRN
weight_densy_temp<-weight_mat_EMPLN_2_densy[g,,]
diag(weight_densy_temp)<-0
EMPLN_2_group_mat<-abs(weight_densy_temp)
rownames(EMPLN_2_group_mat) <- rowname_vec
colnames(EMPLN_2_group_mat) <- rowname_vec
rownames(gold_standard_network) <- rowname_vec
colnames(gold_standard_network) <- rowname_vec
result_matrix <- ifelse(EMPLN_2_group_mat != 0 & gold_standard_network != 0, 1, 0)
non_zero_positions <- which(result_matrix != 0, arr.ind = TRUE)
print("不为0的位置:")
print(non_zero_positions)
for (variable in 1:dim(non_zero_positions)[1]) {
print(paste("i ",gene_GRN[non_zero_positions[variable,1]],"j ", gene_GRN[non_zero_positions[variable,2]]))
}
library(igraph)
library(Seurat)
library(SeuratData)
load(paste(File_path,"/Method_4group/EMPLN2/Output_Obj/result_all_list_iter3_omega0.8_diagonal_ifFALSE_cut50_4group.Rdata",sep = ""))
load(paste(File_path,"/Method_4group/EMPLN/Output_Obj/EMPLN_init_4group.Rdata",sep = ""))
load(paste(File_path,"/Data/cluster_true_4group.Rdata",sep = ""))
TF_name<-gene_GRN[1:8]
rowname_vec<-rownames(EMPLN_init$sigma_mat_list[[1]])
row_index<-which(rowname_vec %in% TF_name)
EMPLN_2_pre_res<-list()
rowname_vec<-gene_GRN
scale_mat<-weight_mat_EMPLN_2_densy[g,,]
weight_densy_temp<- (scale_mat)/(matrix(sqrt(diag((scale_mat))),ncol = 1) %*% matrix(sqrt(diag((scale_mat))),nrow = 1))
diag(weight_densy_temp)<-0
EMPLN_2_group_mat<-abs(weight_densy_temp)
rownames(EMPLN_2_group_mat) <- rowname_vec
colnames(EMPLN_2_group_mat) <- rowname_vec
# no_regulation_genes <- rowname_vec[
#   apply(EMPLN_2_group_mat[2:8,] == 0, 2, all)    # 检查matrix3每列是否全为0
# ]
group_gene_name<-setdiff(rowname_vec,no_regulation_genes)
group_gene_name<-setdiff(group_gene_name,gene_GRN[2:8])
group_gene_name<-c(gene_GRN[2:8],group_gene_name)
input_plot_mat1<-EMPLN_2_group_mat[group_gene_name,group_gene_name]
input_plot_mat1<-t(input_plot_mat1)+input_plot_mat1
gene_network1 <- graph_from_adjacency_matrix(input_plot_mat1, mode = "undirected", diag = FALSE, weighted = TRUE)
# 设置节点标签（假设 group_gene_name 是基因名称的向量）
V(gene_network1)$label <- group_gene_name
# 设置节点颜色
V(gene_network1)$color <- adjustcolor("#A2D2DF", alpha.f = 0.8)
V(gene_network1)$frame.color <- "#7AB2D3"
# 设置边框宽度
V(gene_network1)$frame.width <- 2
# 将相关性值映射到边的宽度上
E(gene_network1)$width <- E(gene_network1)$weight * 10
# 设置边的颜色
E(gene_network1)$color <- "gray"
set.seed(12)
layout_coords <- layout_with_fr(gene_network1)
# layout_coords <- layout_with_kk(gene_network1)
layout_coords <- layout_coords   # 放大布局坐标，增加节点之间的距离
label_distance <- -0.5 # 调整节点标签与节点之间的距离
label_degree<-(pi)/2
label_cex<-0.7
node_size<-12
plot(gene_network1, layout = layout_coords,
vertex.size = node_size,
vertex.label.dist = label_distance,  # 调整标签与节点的距离
vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
vertex.label.cex = label_cex,  # 调整基因名的字体大小
main = "EMPLN2")
celltype_order<-colnames(table(EMPLN_init$celltypes_label,cluster_true))[apply(table(EMPLN_init$celltypes_label,cluster_true),MARGIN = 1,which.max)]
# 计算加权节点度
weighted_degrees <- strength(gene_network1, weights = E(gene_network1)$weight)
# 将加权节点度映射到节点大小
node_size <- weighted_degrees / max(weighted_degrees) * 10  # 归一化并放大
# 重新绘制网络图
plot(gene_network1, layout = layout_coords,
vertex.size = node_size,  # 节点大小
vertex.label.dist = label_distance,  # 调整标签与节点的距离
vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
vertex.label.cex = label_cex,  # 调整基因名的字体大小
main = celltype_order[g])
# 重新绘制网络图
plot(gene_network1, layout = layout_coords,
vertex.size = node_size,  # 节点大小
vertex.label.dist = label_distance,  # 调整标签与节点的距离
vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
vertex.label.cex = label_cex,  # 调整基因名的字体大小
main = celltype_order[g])
plot(gene_network1, layout = layout_coords,
vertex.size = node_size,
vertex.label.dist = label_distance,  # 调整标签与节点的距离
vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
vertex.label.cex = label_cex,  # 调整基因名的字体大小
main = "EMPLN2")
##Density-specific GRN selection for each method
rm(list = ls())
#1. Set up the overall file path
##--------------------------------------------------------------------------------------------
##--------------------------------------------------------------------------------------------
data_source<-"Zheng"
dim_data<-300
#2. Set up the overall file path
File_path0<-paste("/Users/fei/Documents/R_project/EM-MMLE/analysis/p",dim_data,sep="")
File_path<-paste(File_path0,"/Benchmarking on scRNA-seq data/",data_source,"'s file",sep = "")
load(file = paste(File_path,"/Evaluation/Obj_use/weight_mat_EMPLN_2_densy_4group_005.Rdata",sep = ""))
load(file = paste(File_path,"/Evaluation/Obj_use/gold_standard_network.Rdata",sep = ""))
load(paste(File_path,"/Data/gene_GRN_intop300HVG_4group.Rdata",sep = ""))
#--------------------------------------------------------------------
EMPLN_2_group_array<-array(NA,dim=c(4,length(gene_GRN),length(gene_GRN)))
for(gg in 1:4){
print(gg)
rowname_vec<-gene_GRN
weight_densy_temp<-weight_mat_EMPLN_2_densy[gg,,]
diag(weight_densy_temp)<-0
EMPLN_2_group_mat<-abs(weight_densy_temp)
rownames(EMPLN_2_group_mat) <- rowname_vec
colnames(EMPLN_2_group_mat) <- rowname_vec
EMPLN_2_group_array[gg,,]<-EMPLN_2_group_mat
}
no_regulation_genes <- gene_GRN[
apply(EMPLN_2_group_array[1,,] == 0, 2, all) &
apply(EMPLN_2_group_array[2,,] == 0, 2, all) &
apply(EMPLN_2_group_array[3,,] == 0, 2, all) &
apply(EMPLN_2_group_array[4,,] == 0, 2, all)
]
g<-1
rowname_vec<-gene_GRN
weight_densy_temp<-weight_mat_EMPLN_2_densy[g,,]
diag(weight_densy_temp)<-0
EMPLN_2_group_mat<-abs(weight_densy_temp)
rownames(EMPLN_2_group_mat) <- rowname_vec
colnames(EMPLN_2_group_mat) <- rowname_vec
rownames(gold_standard_network) <- rowname_vec
colnames(gold_standard_network) <- rowname_vec
result_matrix <- ifelse(EMPLN_2_group_mat != 0 & gold_standard_network != 0, 1, 0)
non_zero_positions <- which(result_matrix != 0, arr.ind = TRUE)
print("不为0的位置:")
print(non_zero_positions)
for (variable in 1:dim(non_zero_positions)[1]) {
print(paste("i ",gene_GRN[non_zero_positions[variable,1]],"j ", gene_GRN[non_zero_positions[variable,2]]))
}
library(igraph)
library(Seurat)
library(SeuratData)
load(paste(File_path,"/Method_4group/EMPLN2/Output_Obj/result_all_list_iter3_omega0.8_diagonal_ifFALSE_cut50_4group.Rdata",sep = ""))
load(paste(File_path,"/Method_4group/EMPLN/Output_Obj/EMPLN_init_4group.Rdata",sep = ""))
load(paste(File_path,"/Data/cluster_true_4group.Rdata",sep = ""))
TF_name<-gene_GRN[1:8]
rowname_vec<-rownames(EMPLN_init$sigma_mat_list[[1]])
row_index<-which(rowname_vec %in% TF_name)
EMPLN_2_pre_res<-list()
rowname_vec<-gene_GRN
scale_mat<-weight_mat_EMPLN_2_densy[g,,]
weight_densy_temp<- (scale_mat)/(matrix(sqrt(diag((scale_mat))),ncol = 1) %*% matrix(sqrt(diag((scale_mat))),nrow = 1))
diag(weight_densy_temp)<-0
EMPLN_2_group_mat<-abs(weight_densy_temp)
rownames(EMPLN_2_group_mat) <- rowname_vec
colnames(EMPLN_2_group_mat) <- rowname_vec
# no_regulation_genes <- rowname_vec[
#   apply(EMPLN_2_group_mat[2:8,] == 0, 2, all)    # 检查matrix3每列是否全为0
# ]
group_gene_name<-setdiff(rowname_vec,no_regulation_genes)
group_gene_name<-setdiff(group_gene_name,gene_GRN[2:8])
group_gene_name<-c(gene_GRN[2:8],group_gene_name)
input_plot_mat1<-EMPLN_2_group_mat[group_gene_name,group_gene_name]
input_plot_mat1<-t(input_plot_mat1)+input_plot_mat1
gene_network1 <- graph_from_adjacency_matrix(input_plot_mat1, mode = "undirected", diag = FALSE, weighted = TRUE)
# 设置节点标签（假设 group_gene_name 是基因名称的向量）
V(gene_network1)$label <- group_gene_name
# 设置节点颜色
V(gene_network1)$color <- adjustcolor("#A2D2DF", alpha.f = 0.8)
V(gene_network1)$frame.color <- "#7AB2D3"
# 设置边框宽度
V(gene_network1)$frame.width <- 2
# 将相关性值映射到边的宽度上
E(gene_network1)$width <- E(gene_network1)$weight * 10
# 设置边的颜色
E(gene_network1)$color <- "gray"
set.seed(12)
layout_coords <- layout_with_fr(gene_network1)
# layout_coords <- layout_with_kk(gene_network1)
layout_coords <- layout_coords   # 放大布局坐标，增加节点之间的距离
label_distance <- -0.5 # 调整节点标签与节点之间的距离
label_degree<-(pi)/2
label_cex<-0.7
node_size<-12
plot(gene_network1, layout = layout_coords,
vertex.size = node_size,
vertex.label.dist = label_distance,  # 调整标签与节点的距离
vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
vertex.label.cex = label_cex,  # 调整基因名的字体大小
main = "EMPLN2")
weighted_degrees <- strength(gene_network1, weights = E(gene_network1)$weight)
# 将加权节点度映射到节点大小
node_size <- weighted_degrees / max(weighted_degrees) * 10  # 归一化并放大
# 获取节点的度数，度数为0的节点表示没有连边
node_degrees <- degree(gene_network1)
vertex_labels <- ifelse(node_degrees > 0, V(gene_network1)$name, NA)
# 生成一个标签向量，度数为0的节点没有标签
# vertex_labels <- ifelse((V(gene_network1)$name %in% gene_GRN[2:8]), V(gene_network1)$name, NA)
# 重新绘制网络图并保存为PDF文件
pdf(paste("/Users/fei/Documents/R_project/EM-MMLE/analysis/p300/Benchmarking on scRNA-seq data/Zheng's file/Evaluation/picture_heatmap/natwork_Zheng", celltype_order[g], ".pdf", sep = ""), width = 8, height = 8)  # 设置保存路径和图像大小
celltype_order<-colnames(table(EMPLN_init$celltypes_label,cluster_true))[apply(table(EMPLN_init$celltypes_label,cluster_true),MARGIN = 1,which.max)]
weighted_degrees <- strength(gene_network1, weights = E(gene_network1)$weight)
# 将加权节点度映射到节点大小
node_size <- weighted_degrees / max(weighted_degrees) * 10  # 归一化并放大
# 获取节点的度数，度数为0的节点表示没有连边
node_degrees <- degree(gene_network1)
vertex_labels <- ifelse(node_degrees > 0, V(gene_network1)$name, NA)
# 生成一个标签向量，度数为0的节点没有标签
# vertex_labels <- ifelse((V(gene_network1)$name %in% gene_GRN[2:8]), V(gene_network1)$name, NA)
# 重新绘制网络图并保存为PDF文件
pdf(paste("/Users/fei/Documents/R_project/EM-MMLE/analysis/p300/Benchmarking on scRNA-seq data/Zheng's file/Evaluation/picture_heatmap/natwork_Zheng", celltype_order[g], ".pdf", sep = ""), width = 8, height = 8)  # 设置保存路径和图像大小
plot(gene_network1, layout = layout_coords,
vertex.size = node_size,  # 节点大小
vertex.label = vertex_labels,  # 只有有连边的节点显示标签
vertex.label.dist = label_distance,  # 调整标签与节点的距离
vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
vertex.label.cex = label_cex,  # 调整基因名的字体大小
main = celltype_order[g])
weighted_degrees <- strength(gene_network1, weights = E(gene_network1)$weight)
# 将加权节点度映射到节点大小
node_size <- weighted_degrees / max(weighted_degrees) * 2  # 归一化并放大
# 获取节点的度数，度数为0的节点表示没有连边
node_degrees <- degree(gene_network1)
vertex_labels <- ifelse(node_degrees > 0, V(gene_network1)$name, NA)
plot(gene_network1, layout = layout_coords,
vertex.size = node_size,  # 节点大小
vertex.label = vertex_labels,  # 只有有连边的节点显示标签
vertex.label.dist = label_distance,  # 调整标签与节点的距离
vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
vertex.label.cex = label_cex,  # 调整基因名的字体大小
main = celltype_order[g])
##Density-specific GRN selection for each method
rm(list = ls())
#1. Set up the overall file path
##--------------------------------------------------------------------------------------------
##--------------------------------------------------------------------------------------------
data_source<-"Zheng"
dim_data<-300
#2. Set up the overall file path
File_path0<-paste("/Users/fei/Documents/R_project/EM-MMLE/analysis/p",dim_data,sep="")
File_path<-paste(File_path0,"/Benchmarking on scRNA-seq data/",data_source,"'s file",sep = "")
load(file = paste(File_path,"/Evaluation/Obj_use/weight_mat_EMPLN_2_densy_4group_005.Rdata",sep = ""))
load(file = paste(File_path,"/Evaluation/Obj_use/gold_standard_network.Rdata",sep = ""))
load(paste(File_path,"/Data/gene_GRN_intop300HVG_4group.Rdata",sep = ""))
#--------------------------------------------------------------------
EMPLN_2_group_array<-array(NA,dim=c(4,length(gene_GRN),length(gene_GRN)))
for(gg in 1:4){
print(gg)
rowname_vec<-gene_GRN
weight_densy_temp<-weight_mat_EMPLN_2_densy[gg,,]
diag(weight_densy_temp)<-0
EMPLN_2_group_mat<-abs(weight_densy_temp)
rownames(EMPLN_2_group_mat) <- rowname_vec
colnames(EMPLN_2_group_mat) <- rowname_vec
EMPLN_2_group_array[gg,,]<-EMPLN_2_group_mat
}
no_regulation_genes <- gene_GRN[
apply(EMPLN_2_group_array[1,,] == 0, 2, all) &
apply(EMPLN_2_group_array[2,,] == 0, 2, all) &
apply(EMPLN_2_group_array[3,,] == 0, 2, all) &
apply(EMPLN_2_group_array[4,,] == 0, 2, all)
]
g<-1
rowname_vec<-gene_GRN
weight_densy_temp<-weight_mat_EMPLN_2_densy[g,,]
diag(weight_densy_temp)<-0
EMPLN_2_group_mat<-abs(weight_densy_temp)
rownames(EMPLN_2_group_mat) <- rowname_vec
colnames(EMPLN_2_group_mat) <- rowname_vec
rownames(gold_standard_network) <- rowname_vec
colnames(gold_standard_network) <- rowname_vec
result_matrix <- ifelse(EMPLN_2_group_mat != 0 & gold_standard_network != 0, 1, 0)
non_zero_positions <- which(result_matrix != 0, arr.ind = TRUE)
print("不为0的位置:")
print(non_zero_positions)
for (variable in 1:dim(non_zero_positions)[1]) {
print(paste("i ",gene_GRN[non_zero_positions[variable,1]],"j ", gene_GRN[non_zero_positions[variable,2]]))
}
# EMPLN_2_group_mat[6,][EMPLN_2_group_mat[6,]!=0]
# print(result_matrix)
library(igraph)
library(Seurat)
library(SeuratData)
load(paste(File_path,"/Method_4group/EMPLN2/Output_Obj/result_all_list_iter3_omega0.8_diagonal_ifFALSE_cut50_4group.Rdata",sep = ""))
load(paste(File_path,"/Method_4group/EMPLN/Output_Obj/EMPLN_init_4group.Rdata",sep = ""))
load(paste(File_path,"/Data/cluster_true_4group.Rdata",sep = ""))
TF_name<-gene_GRN[1:8]
rowname_vec<-rownames(EMPLN_init$sigma_mat_list[[1]])
row_index<-which(rowname_vec %in% TF_name)
EMPLN_2_pre_res<-list()
# scale_mat<-(result_all_list$Theta_mat_array_hat_all[,,g,which.min(result_all_list$BIC_mat_shrink[g,])])
# weight_densy_temp<- (scale_mat)/(matrix(sqrt(diag((scale_mat))),ncol = 1) %*% matrix(sqrt(diag((scale_mat))),nrow = 1))
# diag(weight_densy_temp)<-0
# EMPLN_2_group_mat<-abs(weight_densy_temp)
rowname_vec<-gene_GRN
scale_mat<-weight_mat_EMPLN_2_densy[g,,]
weight_densy_temp<- (scale_mat)/(matrix(sqrt(diag((scale_mat))),ncol = 1) %*% matrix(sqrt(diag((scale_mat))),nrow = 1))
diag(weight_densy_temp)<-0
EMPLN_2_group_mat<-abs(weight_densy_temp)
rownames(EMPLN_2_group_mat) <- rowname_vec
colnames(EMPLN_2_group_mat) <- rowname_vec
# no_regulation_genes <- rowname_vec[
#   apply(EMPLN_2_group_mat[2:8,] == 0, 2, all)    # 检查matrix3每列是否全为0
# ]
group_gene_name<-setdiff(rowname_vec,no_regulation_genes)
group_gene_name<-setdiff(group_gene_name,gene_GRN[2:8])
group_gene_name<-c(gene_GRN[2:8],group_gene_name)
input_plot_mat1<-EMPLN_2_group_mat[group_gene_name,group_gene_name]
input_plot_mat1<-t(input_plot_mat1)+input_plot_mat1
gene_network1 <- graph_from_adjacency_matrix(input_plot_mat1, mode = "undirected", diag = FALSE, weighted = TRUE)
# 设置节点标签（假设 group_gene_name 是基因名称的向量）
V(gene_network1)$label <- group_gene_name
# 设置节点颜色
V(gene_network1)$color <- adjustcolor("#A2D2DF", alpha.f = 0.8)
V(gene_network1)$frame.color <- "#7AB2D3"
# 设置边框宽度
V(gene_network1)$frame.width <- 2
# 将相关性值映射到边的宽度上
E(gene_network1)$width <- E(gene_network1)$weight * 10
# 设置边的颜色
E(gene_network1)$color <- "gray"
set.seed(12)
layout_coords <- layout_with_fr(gene_network1)
# layout_coords <- layout_with_kk(gene_network1)
layout_coords <- layout_coords   # 放大布局坐标，增加节点之间的距离
label_distance <- -0.5 # 调整节点标签与节点之间的距离
label_degree<-(pi)/2
label_cex<-0.7
node_size<-12
# plot(gene_network1, layout = layout_coords,
#      vertex.size = node_size,
#      vertex.label.dist = label_distance,  # 调整标签与节点的距离
#      vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
#      vertex.label.cex = label_cex,  # 调整基因名的字体大小
#      main = "EMPLN2")
celltype_order<-colnames(table(EMPLN_init$celltypes_label,cluster_true))[apply(table(EMPLN_init$celltypes_label,cluster_true),MARGIN = 1,which.max)]
#
# # 计算加权节点度
# weighted_degrees <- strength(gene_network1, weights = E(gene_network1)$weight)
#
# # 将加权节点度映射到节点大小
# node_size <- weighted_degrees / max(weighted_degrees) * 10  # 归一化并放大
#
# # 重新绘制网络图
# plot(gene_network1, layout = layout_coords,
#      vertex.size = node_size,  # 节点大小
#      vertex.label.dist = label_distance,  # 调整标签与节点的距离
#      vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
#      vertex.label.cex = label_cex,  # 调整基因名的字体大小
#      main = celltype_order[g])
weighted_degrees <- strength(gene_network1, weights = E(gene_network1)$weight)
# 将加权节点度映射到节点大小
node_size <- weighted_degrees / max(weighted_degrees) * 2  # 归一化并放大
# 获取节点的度数，度数为0的节点表示没有连边
node_degrees <- degree(gene_network1)
vertex_labels <- ifelse(node_degrees > 0, V(gene_network1)$name, NA)
# 生成一个标签向量，度数为0的节点没有标签
# vertex_labels <- ifelse((V(gene_network1)$name %in% gene_GRN[2:8]), V(gene_network1)$name, NA)
# 重新绘制网络图并保存为PDF文件
# pdf(paste("/Users/fei/Documents/R_project/EM-MMLE/analysis/p300/Benchmarking on scRNA-seq data/Zheng's file/Evaluation/picture_heatmap/natwork_Zheng", celltype_order[g], ".pdf", sep = ""), width = 8, height = 8)  # 设置保存路径和图像大小
plot(gene_network1, layout = layout_coords,
vertex.size = node_size,  # 节点大小
vertex.label = vertex_labels,  # 只有有连边的节点显示标签
vertex.label.dist = label_distance,  # 调整标签与节点的距离
vertex.label.degree = label_degree,  # 标签位置设为节点的正上方
vertex.label.cex = label_cex,  # 调整基因名的字体大小
main = celltype_order[g])
